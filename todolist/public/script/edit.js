// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
let isEditing = false;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è/–≤–∫–ª—é—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function toggleEditButtons(disable) {
    $('.edit_task, .edit_subtask').prop('disabled', disable);
    $('.edit_task, .edit_subtask').css('opacity', disable ? '0.5' : '1');
    $('.edit_task, .edit_subtask').css('cursor', disable ? 'not-allowed' : 'pointer');
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
$(document).on('click', '.edit_task', function () {
    const $task = $(this).closest('.task');
    if (isEditing || $task.hasClass('completed')) return;

    isEditing = true;
    toggleEditButtons(true);

    const taskId = $(this).data('task-id');
    const $taskName = $task.find('.task_name');
    const $taskDescription = $task.find('.task_description');
    const currentTitle = $taskName.text();
    const currentDescription = $taskDescription.text();

    $taskName.html(`<input type="text" class="edit_task_name" value="${currentTitle}">`);
    $taskDescription.html(`<textarea class="edit_task_description">${currentDescription}</textarea>`);
    $(this).replaceWith(`<div class="save_task" data-task-id="${taskId}" style="cursor: pointer;">üíæ</div>`);
});


// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∑–∞–¥–∞—á–∏
$(document).on('click', '.edit_subtask', function () {
    const $subtask = $(this).closest('.subtask');
    if (isEditing || $subtask.hasClass('completed')) return;

    isEditing = true;
    toggleEditButtons(true);

    const subtaskId = $(this).data('subtask-id');
    const $subtaskName = $subtask.find('.subtask_name');
    const $subtaskDescription = $subtask.find('.subtask_description');
    const currentTitle = $subtaskName.text();
    const currentDescription = $subtaskDescription.text();

    $subtaskName.html(`<input type="text" class="edit_subtask_name" value="${currentTitle}">`);
    $subtaskDescription.html(`<textarea class="edit_subtask_description">${currentDescription}</textarea>`);
    $(this).replaceWith(`<div class="save_subtask" data-subtask-id="${subtaskId}" style="cursor: pointer;">üíæ</div>`);
});


// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
$(document).on('click', '.save_task', function () {
    const $task = $(this).closest('.task');
    const taskId = $(this).data('task-id');
    const newTitle = $task.find('.edit_task_name').val().trim();
    const newDescription = $task.find('.edit_task_description').val().trim();

    $task.find('.task_name').text(newTitle);
    $task.find('.task_description').text(newDescription);
    $(this).replaceWith(`<div class="edit_task" data-task-id="${taskId}" style="cursor: pointer;">üñä</div>`);

    saveTaskData(taskId, newTitle, newDescription);
    isEditing = false;
    toggleEditButtons(false);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–¥–∑–∞–¥–∞—á–∏
$(document).on('click', '.save_subtask', function () {
    const $subtask = $(this).closest('.subtask');
    const subtaskId = $(this).data('subtask-id');
    const newTitle = $subtask.find('.edit_subtask_name').val().trim();
    const newDescription = $subtask.find('.edit_subtask_description').val().trim();

    $subtask.find('.subtask_name').text(newTitle);
    $subtask.find('.subtask_description').text(newDescription);
    $(this).replaceWith(`<div class="edit_subtask" data-subtask-id="${subtaskId}" style="cursor: pointer;">üñä</div>`);

    saveTaskData(subtaskId, newTitle, newDescription, true);
    isEditing = false;
    toggleEditButtons(false);
});

// –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
function saveTaskData(id, title, description, isSubtask = false) {
    const data = {
        id: id,
        title: title,
        description: description
    };

    $.ajax({
        url: "/api/tasks.php", // –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
        method: "PATCH",
        contentType: "application/json",
        data: JSON.stringify(data),
        dataType: "json",
        success: function (response) {
            if (response.status !== 'success') {
                alert(response.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö');
            }
        },
        error: function (xhr, status, error) {
            console.log("–û—à–∏–±–∫–∞ AJAX:", status, error);
            alert('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
        }
    });
}